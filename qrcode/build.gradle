apply plugin: 'com.android.library'
apply plugin: 'maven'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion



    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resourcePrefix "qr_"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation  "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation 'com.google.zxing:core:3.3.0'
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation ("com.alibaba:arouter-api:$arouterApiVersion"){
        exclude module:"support-v4"
    }
    annotationProcessor "com.alibaba:arouter-compiler:$arouterCompilerVersion"
}

group = 'com.pm.qrcode'
version = '0.1.1'

uploadArchives {
    repositories {
        mavenDeployer {
            //提交到远程服务器：
            /* repository(url: "http://www.xxx.com/repos") {
                authentication(userName: "admin", password: "admin")
             }*/
            //本地的Maven地址
            repository(url: uri('../repositories'))
//            pom.groupId = group
            pom.version  = version
            pom.artifactId = 'qrcode'
        }
    }
}
